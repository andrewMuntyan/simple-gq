// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<CreateCategoryForm /> renders and maches snapshot 1`] = `
<form
  className="makeStyles-container-1"
  data-test="add-entity-form"
  noValidate={true}
  onSubmit={[Function]}
>
  <span
    className="makeStyles-input-2"
  >
    <TextInput
      disabled={false}
      error={false}
      label="Add new category"
      onChange={[Function]}
      required={true}
      value=""
    >
      <WithStyles(ForwardRef(TextField))
        autoComplete="off"
        className="makeStyles-textField-5"
        disabled={false}
        error={false}
        id="standard-dense"
        inputProps={
          Object {
            "data-test": "text-field",
          }
        }
        label="Add new category"
        margin="dense"
        onChange={[Function]}
        required={true}
        value=""
      >
        <ForwardRef(TextField)
          autoComplete="off"
          className="makeStyles-textField-5"
          classes={
            Object {
              "root": "MuiTextField-root",
            }
          }
          disabled={false}
          error={false}
          id="standard-dense"
          inputProps={
            Object {
              "data-test": "text-field",
            }
          }
          label="Add new category"
          margin="dense"
          onChange={[Function]}
          required={true}
          value=""
        >
          <WithStyles(ForwardRef(FormControl))
            className="MuiTextField-root makeStyles-textField-5"
            disabled={false}
            error={false}
            margin="dense"
            required={true}
            variant="standard"
          >
            <ForwardRef(FormControl)
              className="MuiTextField-root makeStyles-textField-5"
              classes={
                Object {
                  "fullWidth": "MuiFormControl-fullWidth",
                  "marginDense": "MuiFormControl-marginDense",
                  "marginNormal": "MuiFormControl-marginNormal",
                  "root": "MuiFormControl-root",
                }
              }
              disabled={false}
              error={false}
              margin="dense"
              required={true}
              variant="standard"
            >
              <div
                className="MuiFormControl-root MuiTextField-root makeStyles-textField-5 MuiFormControl-marginDense"
              >
                <WithStyles(ForwardRef(InputLabel))
                  htmlFor="standard-dense"
                >
                  <ForwardRef(InputLabel)
                    classes={
                      Object {
                        "animated": "MuiInputLabel-animated",
                        "asterisk": "MuiInputLabel-asterisk",
                        "disabled": "Mui-disabled",
                        "error": "Mui-error",
                        "filled": "MuiInputLabel-filled",
                        "focused": "Mui-focused",
                        "formControl": "MuiInputLabel-formControl",
                        "marginDense": "MuiInputLabel-marginDense",
                        "outlined": "MuiInputLabel-outlined",
                        "required": "Mui-required",
                        "root": "MuiInputLabel-root",
                        "shrink": "MuiInputLabel-shrink",
                      }
                    }
                    htmlFor="standard-dense"
                  >
                    <WithStyles(ForwardRef(FormLabel))
                      className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-marginDense"
                      classes={
                        Object {
                          "asterisk": "MuiInputLabel-asterisk",
                          "disabled": "Mui-disabled",
                          "error": "Mui-error",
                          "focused": "Mui-focused",
                          "required": "Mui-required",
                        }
                      }
                      data-shrink={false}
                      htmlFor="standard-dense"
                    >
                      <ForwardRef(FormLabel)
                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-marginDense"
                        classes={
                          Object {
                            "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                            "disabled": "Mui-disabled Mui-disabled",
                            "error": "Mui-error Mui-error",
                            "filled": "MuiFormLabel-filled",
                            "focused": "Mui-focused Mui-focused",
                            "required": "Mui-required Mui-required",
                            "root": "MuiFormLabel-root",
                          }
                        }
                        data-shrink={false}
                        htmlFor="standard-dense"
                      >
                        <label
                          className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-marginDense Mui-required Mui-required"
                          data-shrink={false}
                          htmlFor="standard-dense"
                        >
                          Add new category
                          <span
                            className="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                          >
                            â€‰
                            *
                          </span>
                        </label>
                      </ForwardRef(FormLabel)>
                    </WithStyles(ForwardRef(FormLabel))>
                  </ForwardRef(InputLabel)>
                </WithStyles(ForwardRef(InputLabel))>
                <WithStyles(ForwardRef(Input))
                  autoComplete="off"
                  id="standard-dense"
                  inputProps={
                    Object {
                      "data-test": "text-field",
                    }
                  }
                  onChange={[Function]}
                  value=""
                >
                  <ForwardRef(Input)
                    autoComplete="off"
                    classes={
                      Object {
                        "disabled": "Mui-disabled",
                        "error": "Mui-error",
                        "focused": "Mui-focused",
                        "formControl": "MuiInput-formControl",
                        "fullWidth": "MuiInput-fullWidth",
                        "input": "MuiInput-input",
                        "inputMarginDense": "MuiInput-inputMarginDense",
                        "inputMultiline": "MuiInput-inputMultiline",
                        "inputTypeSearch": "MuiInput-inputTypeSearch",
                        "multiline": "MuiInput-multiline",
                        "root": "MuiInput-root",
                        "underline": "MuiInput-underline",
                      }
                    }
                    id="standard-dense"
                    inputProps={
                      Object {
                        "data-test": "text-field",
                      }
                    }
                    onChange={[Function]}
                    value=""
                  >
                    <WithStyles(ForwardRef(InputBase))
                      autoComplete="off"
                      classes={
                        Object {
                          "disabled": "Mui-disabled",
                          "error": "Mui-error",
                          "focused": "Mui-focused",
                          "formControl": "MuiInput-formControl",
                          "fullWidth": "MuiInput-fullWidth",
                          "input": "MuiInput-input",
                          "inputMarginDense": "MuiInput-inputMarginDense",
                          "inputMultiline": "MuiInput-inputMultiline",
                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                          "multiline": "MuiInput-multiline",
                          "root": "MuiInput-root MuiInput-underline",
                          "underline": null,
                        }
                      }
                      fullWidth={false}
                      id="standard-dense"
                      inputComponent="input"
                      inputProps={
                        Object {
                          "data-test": "text-field",
                        }
                      }
                      multiline={false}
                      onChange={[Function]}
                      type="text"
                      value=""
                    >
                      <ForwardRef(InputBase)
                        autoComplete="off"
                        classes={
                          Object {
                            "adornedEnd": "MuiInputBase-adornedEnd",
                            "adornedStart": "MuiInputBase-adornedStart",
                            "disabled": "Mui-disabled Mui-disabled",
                            "error": "Mui-error Mui-error",
                            "focused": "Mui-focused Mui-focused",
                            "formControl": "MuiInputBase-formControl MuiInput-formControl",
                            "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                            "input": "MuiInputBase-input MuiInput-input",
                            "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                            "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                            "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                            "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                            "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                            "inputSelect": "MuiInputBase-inputSelect",
                            "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                            "marginDense": "MuiInputBase-marginDense",
                            "multiline": "MuiInputBase-multiline MuiInput-multiline",
                            "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                          }
                        }
                        fullWidth={false}
                        id="standard-dense"
                        inputComponent="input"
                        inputProps={
                          Object {
                            "data-test": "text-field",
                          }
                        }
                        multiline={false}
                        onChange={[Function]}
                        type="text"
                        value=""
                      >
                        <div
                          className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl MuiInputBase-marginDense"
                          onClick={[Function]}
                        >
                          <input
                            aria-invalid={false}
                            autoComplete="off"
                            className="MuiInputBase-input MuiInput-input MuiInputBase-inputMarginDense MuiInput-inputMarginDense"
                            data-test="text-field"
                            disabled={false}
                            id="standard-dense"
                            onAnimationStart={[Function]}
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            required={true}
                            type="text"
                            value=""
                          />
                        </div>
                      </ForwardRef(InputBase)>
                    </WithStyles(ForwardRef(InputBase))>
                  </ForwardRef(Input)>
                </WithStyles(ForwardRef(Input))>
              </div>
            </ForwardRef(FormControl)>
          </WithStyles(ForwardRef(FormControl))>
        </ForwardRef(TextField)>
      </WithStyles(ForwardRef(TextField))>
    </TextInput>
  </span>
  <WithStyles(ForwardRef(Fab))
    aria-label="add"
    className="makeStyles-fab-3"
    color="secondary"
    disabled={true}
    size="small"
    type="submit"
  >
    <ForwardRef(Fab)
      aria-label="add"
      className="makeStyles-fab-3"
      classes={
        Object {
          "colorInherit": "MuiFab-colorInherit",
          "disabled": "Mui-disabled",
          "extended": "MuiFab-extended",
          "focusVisible": "Mui-focusVisible",
          "label": "MuiFab-label",
          "primary": "MuiFab-primary",
          "root": "MuiFab-root",
          "secondary": "MuiFab-secondary",
          "sizeMedium": "MuiFab-sizeMedium",
          "sizeSmall": "MuiFab-sizeSmall",
        }
      }
      color="secondary"
      disabled={true}
      size="small"
      type="submit"
    >
      <WithStyles(ForwardRef(ButtonBase))
        aria-label="add"
        className="MuiFab-root makeStyles-fab-3 MuiFab-sizeSmall Mui-disabled MuiFab-secondary"
        component="button"
        disabled={true}
        focusRipple={true}
        focusVisibleClassName="Mui-focusVisible"
        type="submit"
      >
        <ForwardRef(ButtonBase)
          aria-label="add"
          className="MuiFab-root makeStyles-fab-3 MuiFab-sizeSmall Mui-disabled MuiFab-secondary"
          classes={
            Object {
              "disabled": "Mui-disabled",
              "focusVisible": "Mui-focusVisible",
              "root": "MuiButtonBase-root",
            }
          }
          component="button"
          disabled={true}
          focusRipple={true}
          focusVisibleClassName="Mui-focusVisible"
          type="submit"
        >
          <button
            aria-label="add"
            className="MuiButtonBase-root MuiFab-root makeStyles-fab-3 MuiFab-sizeSmall Mui-disabled MuiFab-secondary Mui-disabled"
            disabled={true}
            onBlur={[Function]}
            onDragLeave={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            tabIndex={-1}
            type="submit"
          >
            <span
              className="MuiFab-label"
            >
              <ForwardRef>
                <WithStyles(ForwardRef(SvgIcon))>
                  <ForwardRef(SvgIcon)
                    classes={
                      Object {
                        "colorAction": "MuiSvgIcon-colorAction",
                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                        "colorError": "MuiSvgIcon-colorError",
                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                        "root": "MuiSvgIcon-root",
                      }
                    }
                  >
                    <svg
                      aria-hidden="true"
                      className="MuiSvgIcon-root"
                      focusable="false"
                      role="presentation"
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
                      />
                    </svg>
                  </ForwardRef(SvgIcon)>
                </WithStyles(ForwardRef(SvgIcon))>
              </ForwardRef>
            </span>
          </button>
        </ForwardRef(ButtonBase)>
      </WithStyles(ForwardRef(ButtonBase))>
    </ForwardRef(Fab)>
  </WithStyles(ForwardRef(Fab))>
</form>
`;
